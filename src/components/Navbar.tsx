import React from 'react';
import { Link, useLocation } from 'react-router-dom';
import { motion, AnimatePresence } from 'framer-motion';
import { Menu, X } from 'lucide-react';

const Navbar = () => {
  const [isOpen, setIsOpen] = React.useState(false);
  const [isScrolled, setIsScrolled] = React.useState(false);
  const location = useLocation();

  const navigation = [
    { name: 'Főoldal', href: '/' },
    { name: 'Szolgáltatások', href: '/szolgaltatasok' },
    { name: 'Csomagok', href: '/csomagok' },
    { name: 'Kapcsolat', href: '/kapcsolat' }
  ];

  React.useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 20);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const handleNavClick = () => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
    setIsOpen(false);
  };

  return (
    <nav className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
      isScrolled ? 'bg-[#0a0a0f]/95 backdrop-blur-md shadow-lg' : 'bg-transparent'
    }`}>
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-16">
          {/* Logo */}
          <Link to="/" onClick={handleNavClick} className="flex items-center">
            <motion.svg 
              width="64" 
              height="64" 
              viewBox="0 0 500 166" 
              className="w-24 h-24"
              whileHover={{ scale: 1.05 }}
              transition={{ type: "spring", stiffness: 300 }}
            >
              <path d="M263 34 C269.93 34 276.86 34 284 34 C284 41.26 284 48.52 284 56 C287.96 56 291.92 56 296 56 C296.33 58.97 296.66 61.94 297 65 C297.51046875 64.54109375 298.0209375 64.0821875 298.546875 63.609375 C307.85664456 55.7521936 317.19561484 53.23677307 329.3203125 53.62109375 C338.96056102 54.61377327 347.16089562 58.02301045 354 65 C355.98 67.97 355.98 67.97 358 71 C358.33 66.05 358.66 61.1 359 56 C365.93 56 372.86 56 380 56 C380.33 57.98 380.66 59.96 381 62 C381.44730469 61.59007813 381.89460938 61.18015625 382.35546875 60.7578125 C388.28211369 55.47564281 392.40974741 53.59839913 400.41796875 53.73046875 C404.31889679 54.13767606 407.42610298 55.41160133 411 57 C410.38188466 61.55315948 408.53234107 65.28459767 406.4375 69.3125 C405.9434668 70.28026367 405.9434668 70.28026367 405.43945312 71.26757812 C404.63175745 72.84785228 403.81662387 74.42432105 403 76 C402.11570312 75.67644531 401.23140625 75.35289063 400.3203125 75.01953125 C397.30266082 74.09293467 395.00419069 73.70221406 391.875 73.6875 C391.04742187 73.67074219 390.21984375 73.65398437 389.3671875 73.63671875 C386.40147945 74.09185216 385.13295951 74.89908066 383 77 C380.87398864 81.16327988 380.66205467 85.12052388 380.5859375 89.70703125 C380.56657135 90.43242599 380.5472052 91.15782074 380.5272522 91.90519714 C380.46777892 94.20751422 380.42120155 96.50988219 380.375 98.8125 C380.33679042 100.37957832 380.29773697 101.94663631 380.2578125 103.51367188 C380.16052505 107.34233825 380.08070406 111.1708049 380 115 C373.07 115 366.14 115 359 115 C358.67 110.38 358.34 105.76 358 101 C356.1128125 103.3203125 356.1128125 103.3203125 354.1875 105.6875 C348.72374468 111.79099882 342.10630257 115.53535499 334 117 C319.91734361 117.76122467 309.59102231 116.65127027 298 108 C298.33 109.98 298.66 111.96 299 114 C291.04624229 117.23542686 283.03733697 118.54082918 274.56640625 116.37890625 C269.19894419 114.09595925 266.37881578 110.22726901 264 105 C262.8397546 101.41023366 262.88587432 98.02065526 262.90234375 94.265625 C262.90556641 92.97011719 262.90878906 91.67460938 262.91210938 90.33984375 C262.92046402 88.97656183 262.92892896 87.61328058 262.9375 86.25 C262.94251832 84.87109535 262.94708065 83.49218896 262.95117188 82.11328125 C262.96295907 78.74214341 262.97941365 75.37109372 263 72 C261.02 72 259.04 72 257 72 C257 86.19 257 100.38 257 115 C224.33 115 191.66 115 158 115 C157.505 94.21 157.505 94.21 157 73 C155.040625 76.795 153.08125 80.59 151.0625 84.5 C147.05829378 92.22322548 143.0217785 99.92083614 138.75 107.5 C138.38011963 108.15677734 138.01023926 108.81355469 137.62915039 109.49023438 C135.1424996 113.8575004 135.1424996 113.8575004 134 115 C131.46950598 115.07313567 128.96695163 115.09247527 126.4375 115.0625 C125.37112305 115.05573242 125.37112305 115.05573242 124.28320312 115.04882812 C122.52209987 115.03700864 120.76103964 115.01907263 119 115 C112.04226481 102.94785471 105.53031227 90.66359955 99.02954102 78.36132812 C98.31657426 77.01301806 97.60360237 75.6647107 96.890625 74.31640625 C96.55006577 73.67120026 96.20950653 73.02599426 95.85862732 72.36123657 C93.58550172 68.06664676 91.24175286 63.81999454 88.80371094 59.61694336 C88 58 88 58 88 56 C96.25 56 104.5 56 113 56 C116.0625 62.625 116.0625 62.625 116.97680664 64.61181641 C120.17232007 71.48926392 123.60268972 78.20537945 127 85 C131.29 75.43 135.58 65.86 140 56 C153.2 56 166.4 56 180 56 C180.33 72.5 180.66 89 181 106 C191.89 89.665 191.89 89.665 203 73 C192.11 72.505 192.11 72.505 181 72 C181 66.72 181 61.44 181 56 C208.06 56 235.12 56 263 56 C263 48.74 263 41.48 263 34 Z M235 63 C233.33200956 65.34907371 231.71787703 67.71373887 230.125 70.11328125 C229.64047363 70.83863571 229.15594727 71.56399017 228.65673828 72.31132507 C227.62947977 73.8511893 226.60397915 75.39222742 225.58007812 76.93432617 C224.01164522 79.29497279 222.43593663 81.65063613 220.859375 84.00585938 C219.86413943 85.49970436 218.86933362 86.99383576 217.875 88.48828125 C217.4020752 89.19463211 216.92915039 89.90098297 216.44189453 90.6287384 C214.61074651 93.39526609 213.05417063 95.8374881 212 99 C219.92 99 227.84 99 236 99 C236 87.12 236 75.24 236 63 C235.67 63 235.34 63 235 63 Z M284 72 C283.91279081 75.58317958 283.85953888 79.16608567 283.8125 82.75 C283.78736328 83.76578125 283.76222656 84.7815625 283.73632812 85.828125 C283.72666016 86.8078125 283.71699219 87.7875 283.70703125 88.796875 C283.6913208 89.69760742 283.67561035 90.59833984 283.65942383 91.52636719 C284.06238228 94.45308763 285.0655403 95.81341349 287 98 C288.32 97.67 289.64 97.34 291 97 C290.98839844 95.69804688 290.97679687 94.39609375 290.96484375 93.0546875 C290.95546027 91.32812644 290.94636066 89.60156382 290.9375 87.875 C290.92912109 87.0190625 290.92074219 86.163125 290.91210938 85.28125 C290.89461694 80.73321589 291.06807642 76.47616836 292 72 C289.36 72 286.72 72 284 72 Z M314.6875 77.125 C312.38154165 81.05366979 311.68093939 84.45533183 312 89 C313.25179821 93.04307495 315.3049197 95.52116691 318.8125 97.9375 C322.54247221 99.18082407 325.09081737 99.48864783 329 99 C332.83944355 96.93260732 335.85433378 94.83961324 338 91 C339.40729664 86.12858855 338.95120073 82.66591478 337 78 C333.96777777 74.6789947 331.40316157 72.79290649 327 72 C321.47145308 72 318.70755254 73.43089767 314.6875 77.125 Z" fill="#FDFBFB"/>
              <path d="M254 21 C257.47065399 24.47065399 258.90575431 26.86905171 259.3125 31.75 C259.26462501 36.13854092 257.82706424 38.60752292 255 42 C250.54422653 44.97051564 246.22557394 44.62737491 241 44 C237.46785515 41.98163151 235.19839948 39.92203467 234 36 C233.54545075 31.30299108 233.5448581 28.96490083 235.5625 24.6875 C240.96005479 18.73634985 246.8245757 17.8911121 254 21 Z" fill="#FDFBFB"/>
              <path d="M177.8125 21.75 C180.76307811 24.78488034 181.93399377 26.86838711 182.06640625 31.14453125 C181.82781714 35.50420493 181.38322079 37.52834364 178.5625 41 C173.8891992 44.6377038 169.77375076 44.66519103 164 44 C160.33288841 41.86085157 158.62927788 39.85102043 157 36 C156.35301426 32.25429308 156.1905601 28.6178222 157.89765625 25.15234375 C163.07694575 18.37430251 170.65285723 17.30288894 177.8125 21.75 Z" fill="#FDFBFB"/>
            </motion.svg>
          </Link>

          {/* Desktop Navigation */}
          <div className="hidden md:flex items-center space-x-8">
            {navigation.map((item) => (
              <Link
                key={item.name}
                to={item.href}
                onClick={handleNavClick}
                className={`relative px-3 py-2 text-sm font-medium transition-colors ${
                  location.pathname === item.href
                    ? 'text-[#ff5c35]'
                    : 'text-gray-300 hover:text-white'
                }`}
              >
                {item.name}
                {location.pathname === item.href && (
                  <motion.div
                    layoutId="underline"
                    className="absolute left-0 right-0 bottom-0 h-0.5 bg-[#ff5c35]"
                  />
                )}
              </Link>
            ))}
            {/* Desktop CTA Button */}
            <Link
              to="/kapcsolat"
              onClick={handleNavClick}
              className="primary-button-mobile hover:scale-105 transition-transform"
            >
              Ajánlatkérés
            </Link>
          </div>

          {/* Mobile Menu Button */}
          <div className="md:hidden">
            <button
              type="button"
              onClick={() => setIsOpen(!isOpen)}
              className="text-gray-300 hover:text-white p-2"
              aria-label={isOpen ? "Close menu" : "Open menu"}
              aria-expanded={isOpen}>
              {isOpen ? <X size={24} /> : <Menu size={24} />}
            </button>
          </div>
        </div>
      </div>

      {/* Mobile Navigation */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            className="md:hidden bg-[#0a0a0f]/95 backdrop-blur-md"
          >
            <div className="px-2 pt-2 pb-3 space-y-1">
              {navigation.map((item) => (
                <Link
                  key={item.name}
                  to={item.href}
                  onClick={handleNavClick}
                  className={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${
                    location.pathname === item.href
                      ? 'text-[#ff5c35] bg-[#ff5c35]/10'
                      : 'text-gray-300 hover:text-white hover:bg-[#ff5c35]/5'
                  }`}
                >
                  {item.name}
                </Link>
              ))}
              {/* Mobile CTA Button */}
              <div className="px-3 py-2">
                <Link
                  to="/kapcsolat"
                  onClick={handleNavClick}
                  className="primary-button-mobile w-full block text-center"
                >
                  Ajánlatkérés
                </Link>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </nav>
  );
};

export default Navbar; 